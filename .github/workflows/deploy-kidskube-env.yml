name: (Job) Deploy to Kidskube (Kubernetes) Environment
# ENV required: [ARGOCD_APP, ARGOCD_APP_CHART_TAG_PATH]
# SECRETS required: [TOOLS_KUBECONFIG_CONTENT_B64, ARGOCD_AUTH_USERNAME, ARGOCD_AUTH_PASSWORD]

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      region:
        required: true
        type: string
      argocd_app:
        required: true
        type: string
      argocd_app_chart_tag_path:
        required: true
        type: string
    secrets:
      TOOLS_KUBECONFIG_CONTENT_B64:
        required: true
      ARGOCD_AUTH_USERNAME:
        required: true
      ARGOCD_AUTH_PASSWORD:
        required: true

env:
  # Due to a Teleport bug, we are using K8 port forwarding to connect to ArgoCD for now.
  TOOLS_KUBECONFIG: "${{ github.workspace }}/.kube/tools-kubeconfig.yml"
  ARGOCD_SERVER: localhost:8080
  ARGOCD_OPTS: --grpc-web --insecure --plaintext
  ARGOCD_APP: ${{ input.argocd_app }}
  ARGOCD_APP_CHART_TAG_PATH: ${{ input.argocd_app_chart_tag_path }}

jobs:
  deploy:
    environment: ${{ input.environment }}
    runs-on: ubuntu-latest
    name: Deploy to ${{ input.environment }}
    steps:
      # Set up the kubeconfig file in GHA secrets first
      - name: Set up kubernetes config file
        run: |
          mkdir -p '${{ github.workspace }}/.kube' \
          && echo '${{ secrets.TOOLS_KUBECONFIG_CONTENT_B64 }}' | base64 -d > $TOOLS_KUBECONFIG

      - name: Test kubernetes connection
        run: "kubectl version --kubeconfig $TOOLS_KUBECONFIG"

      - name: Configure ArgoCD CLI
        uses: clowdhaus/argo-cd-action@v1.9.0
        with:
          version: 2.2.5
          command: version
          options: --client

      - name: Set up kubernetes port-forwarding connection to tools cluster
        run: "kubectl port-forward -n argocd svc/argocd-server 8080:80 --kubeconfig $TOOLS_KUBECONFIG &"

      - name: Configure tags
        run: |
          export BRANCH_TAG=$(echo "${GITHUB_REF_NAME}" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
          export ENV_TAG="${{input.region}}-${{input.environment}}"
          export DEPLOY_TAG=$BRANCH_TAG-$ENV_TAG-${GITHUB_SHA::7}
          echo "TAG    : ${TAG}"
          echo "COMMIT : ${GITHUB_SHA::7}"
          echo "IMAGE  : $DEPLOY_TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "DEPLOY_TAG=$DEPLOY_TAG" >> $GITHUB_ENV

      - name: Log into ArgoCD
        uses: clowdhaus/argo-cd-action@v1.9.0
        with:
          version: 2.2.5
          command: login
          options: >
            '${{ env.ARGOCD_SERVER }}'
            --username '${{ secrets.ARGOCD_AUTH_USERNAME }}'
            --password '${{ secrets.ARGOCD_AUTH_PASSWORD }}'
            ${{ env.ARGOCD_OPTS }}

      - name: Show ArgoCD app info
        uses: clowdhaus/argo-cd-action@v1.9.0
        with:
          version: 2.2.5
          command: app
          options: get ${{ env.ARGOCD_APP }}

      - name: Set ArgoCD app tag to build output
        uses: clowdhaus/argo-cd-action@v1.9.0
        with:
          version: 2.2.5
          command: app
          options: set ${{ env.ARGOCD_APP }} -p ${{ env.ARGOCD_APP_CHART_TAG_PATH }}=${{ env.DEPLOY_TAG }}

      - name: Sync the app now
        uses: clowdhaus/argo-cd-action@v1.9.0
        with:
          version: 2.2.5
          command: app
          options: sync ${{ env.ARGOCD_APP }} --timeout 300

      - name: Status - ArgoCD url
        if: always()
        uses: ouzi-dev/commit-status-updater@v1.1.0
        with:
          status: "${{ job.status }}"
          url: https://argocd.kidsloop.teleport.sh/applications/${{ env.ARGOCD_APP }}
          description: "Click to view the app in ArgoCD"
          name: "ArgoCD"
