name: (Job) npm generate version

on:
  workflow_call:
    inputs:
      prerelease:
        required: false
        type: string
        default: ''
    secrets:
      NODE_AUTH_TOKEN:
        required: true

jobs:
  generate-version:
    name: Generate version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/

      - name: Find node_modules cache
        id: cache-node_modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Setup git user config
        run: |
          git config --global user.email "KLG-SVC-Github-User@kidsloop.live"
          git config --global user.name "github-user-kidsloop"

      - name: Generate prerelease version
        if: ${{ inputs.prerelease != '' }}
        run: npm run release -- --prerelease ${{ inputs.prerelease }}

      - name: Generate version
        if: ${{ inputs.prerelease == '' }}
        run: npm run release

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.NODE_AUTH_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: Get latest tag
        id: get-latest-tag
        run: echo ::set-output name=tag::$(git describe --tags --abbrev=0)

      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        with:
          tag_name: ${{ steps.get-latest-tag.outputs.tag }}
          release_name: ${{ steps.get-latest-tag.outputs.tag }}
          draft: false
          prerelease: ${{ inputs.prerelease != '' }}
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
